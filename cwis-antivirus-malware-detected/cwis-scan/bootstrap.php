<?php

defined( 'ABSPATH' ) || exit;

use App\State;
use DI\Container;
use Slim\Factory\AppFactory;

require_once __DIR__ . '/config/cwis-compat.php';
require_once __DIR__ . '/config/debug.php';

if (!defined('CWIS_PLATFORM_TYPE')) {
    die('constant CWIS_PLATFORM_TYPE should be defined');
}

require __DIR__ . '/vendor/autoload.php';

State::loadTranslations(State::detectLang());
State::loadConfig(CWIS_PLATFORM_TYPE);

$container = new Container();

$container->set('view', function() {
    return \Slim\Views\Twig::create(State::workPath().'/twig');
});

$app = AppFactory::createFromContainer($container);

if (CWIS_PLATFORM_TYPE == 'wordpress' && !defined('CWIS_BLOCK_CHECK')) {
    //TODO: fix
    try {
        define('CWIS_AUTHENTICATED', true);
        if (!function_exists('add_action')) {
            if (file_exists(__DIR__ . '/../../../../wp-load.php')) {
                defined( 'SHORTINIT') || define( 'SHORTINIT', true );
                require_once(__DIR__ . '/../../../../wp-load.php');

                require ABSPATH . WPINC . '/theme.php';
                require ABSPATH . WPINC . '/class-wp-theme.php';
                require ABSPATH . WPINC . '/template.php';
                require ABSPATH . WPINC . "/general-template.php";
                require ABSPATH . WPINC . '/class-wp-block-parser.php';
                require ABSPATH . WPINC . "/blocks.php";
                require ABSPATH . WPINC . "/kses.php";

                register_theme_directory( get_theme_root() );
                wp_plugin_directory_constants();
            } else {
                require_once('/var/www/wordpress/wp-load.php');
            }
        }
    } catch (Exception $exception){
        die($exception->getMessage());
    }
}

return $app;
