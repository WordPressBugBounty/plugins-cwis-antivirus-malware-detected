<?php

namespace App\Library;

class CwisPreg
{

    /**
     * Delimiters used in regex patterns (character).
     * @var string
     */
    var $delimiters = '~';

    /**
     * Modifiers used in regex patterns.
     * @param string $patterns
     */
    var $modifiers = 'smiS';

    /**
     * Filled with the results matched.
     * @var array $matches
     */
    var $matches = array();

    /**
     * Returns the last matches.
     * @param array $matches
     */
    function getMatches()
    {
        return $this->matches;
    }

    /**
     * Wrapper for preg_match, except the method supports arrays of patterns.
     * @param type $patterns
     * @param type $subject
     * @return bool
     */
    function match($patterns = array(), $subject = '')
    {
        if (!is_array($patterns)) {
            $patterns = array($patterns);
        }

        $this->matches = array();
        foreach ($patterns as $pattern) {
            if (preg_match($this->delimiters . $pattern . $this->delimiters .
                $this->modifiers, $subject, $this->matches, PREG_OFFSET_CAPTURE)) {
                return true;
            }
        }

        return false;
    }

}
