<?php

namespace App\Library;
use App\State;
use App\Library\Cwsd;

class CwisRuntime
{

    public function run()
    {
        $cwsd = new Cwsd('CWIS', '4.X');
        $cwsd->run_defender();
    }

    public function setMode($mode)
    {
        if (!isset($_SERVER['DOCUMENT_ROOT']) || !file_exists($this->indexPath())) {
            return [ 'success' => false, 'mode' => $mode, 'error' => 'No index.php in document root.' ];
        }

        switch ($mode) {
            case 0:
                if($this->isHooked()) {
                    $this->removeHook();
                }
                break;

            case 1:
            case 2:
            case 3:
                if ($this->isHooked()) {
                    $this->removeHook();
                }
                $this->applyHook();
                break;
        }

        return [ 'success' => true, 'mode' => $mode ];
    }

    private function indexPath()
    {
        return $_SERVER['DOCUMENT_ROOT'] . '/wp-load.php';
    }

    private function getIndexData()
    {
        $index = $this->indexPath();
        return file_get_contents($index);
    }

    private function setIndexData($data)
    {
        $index = $this->indexPath();
        return file_put_contents($index, $data);
    }

    public function isHooked()
    {
        return  strpos($this->getIndexData(), "// CWIS HOOK START") > -1;
    }

    public function applyHook()
    {
        $data = $this->getIndexData();
        if (!$data) {
            return false;
        }

        $path  = realpath(__DIR__ . '/../../../') . '/';

$patch = <<<XML
// CWIS HOOK START

define('CWIS_BLOCK_MODE', 1);
if (!defined('CWIS_AUTHENTICATED')) {
    if ( ! defined( 'ABSPATH' ) ) {
        define( 'ABSPATH', __DIR__ . '/' );
    }
    if ( file_exists( ABSPATH . 'wp-config.php' ) ) {
        require_once ABSPATH . 'wp-config.php';
    } elseif ( @file_exists( dirname( ABSPATH ) . '/wp-config.php' ) && 
        ! @file_exists( dirname( ABSPATH ) . '/wp-settings.php' ) ) {
        require_once dirname( ABSPATH ) . '/wp-config.php';
    }
    if (!defined('CWIS_PLUGIN_DIR_PATH')) { define('CWIS_PLUGIN_DIR_PATH', '$path'); }
    if (file_exists(CWIS_PLUGIN_DIR_PATH . 'cwis-scan/bootstrap.php') && 
        extension_loaded('curl')) {
        if (!defined('CWIS_PLATFORM_TYPE'))   { define('CWIS_PLATFORM_TYPE', 'wordpress'); }
        define('CWIS_BLOCK_CHECK', 1);
        
        require_once(CWIS_PLUGIN_DIR_PATH . 'cwis-scan/bootstrap.php');
        include_once(CWIS_PLUGIN_DIR_PATH . 'cwis-scan/app/Library/CwisRuntime.php');
        \$runtime = new App\Library\CwisRuntime();
        \$runtime->run();
    }
}

// CWIS HOOK END
XML;

        $this->setIndexData(str_replace("<?php", "<?php\n$patch", $data));
    }

    public function removeHook()
    {
        $data = $this->getIndexData();
        $pointer_1 = strpos($data, "// CWIS HOOK START");
        $pointer_2 = strpos($data, "// CWIS HOOK END");
        $res       = '';

        if ($pointer_1 == -1 || !$pointer_2 == -1) {
            // Malformed hook
            return false;
        } else {
            $res .= substr($data, 0, $pointer_1);
            $res .= substr($data, $pointer_2 + strlen("// CWIS HOOK END") + 1);
            $this->setIndexData($res);
        }
    }
}
