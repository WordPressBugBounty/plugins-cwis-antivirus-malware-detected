<?php

namespace App\Middlewares;

use App\State;
use Psr\Http\Message\ServerRequestInterface as Request;
use Psr\Http\Server\RequestHandlerInterface as RequestHandler;
use Slim\Psr7\Response;

class WordpressMiddleware
{
    public function __invoke(Request $request, RequestHandler $handler): Response
    {
        return $handler->handle($request);

        try {
            if(!function_exists('add_action')) {
              if (file_exists(__DIR__ . '/../../../../../../wp-load.php')) {
                  require_once(__DIR__ . '/../../../../../../wp-load.php');
              } else {
                  //require_once('/var/www/wordpress/wp-load.php');
              }
            }
        } catch (Exception $exception){
          $response = new Response();
          $response->getBody()->write('(Wordpress Middleware)');
          return $response->withStatus(500);
        }

    }
}
