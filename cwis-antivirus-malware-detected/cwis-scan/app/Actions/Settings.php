<?php

namespace App\Actions;

use App\State;
use App\Library\CwisApp;
use App\Library\CwisLoader;
use App\Library\CwisStaticHelpers;
use App\Library\CwisUtilities;
use App\Library\Cwis_Defender_Settings;

class Settings extends BaseAction
{
    public function __invoke($params): array
    {

      if(isset($params['licence'])) {

        $cwis = new CwisApp();
        $cwis->construct(0, State::scanPath());

        $cwis->licensing->local_domain = strip_tags(CwisStaticHelpers::get_server_host());
        if (substr($cwis->licensing->local_domain, 0, 4) === 'www.') {
            $cwis->licensing->local_domain = substr($cwis->licensing->local_domain, 4);
        }
        $cwis->licensing->local_usersip = strip_tags(get_server_ip());
        $cwis->licensing->local_dirpath = State::scanPath();

        $check = $cwis->licensing->checkPremium(null, $params['licence']);

        if($check && isset($check['localkey'])) {
          $utilities = new CwisUtilities();
          if(State::cnf('CWIS_PLATFORM_TYPE') == 'cpanel') {
              $utilities->setScanPath(State::scanPath());
          }
          $license_filepath = $utilities->defineFilePath('license');
          file_put_contents_safe($license_filepath, $check['localkey']);
        }

        return $check;

      }

      $cwis_defender_settings = new Cwis_Defender_Settings();
      $cwsd_options_prev      = $cwis_defender_settings->all();

      if(isset($cwsd_options_prev['ipfilter']) && $params && isset($params['allow']) && isset($params['block'])) {

        if(isset($params['overwrite']) && $params['overwrite'] == true) {

          $cwsd_options_prev['ipfilter']['allow'] = explode(',', $params['allow']);
          $cwsd_options_prev['ipfilter']['block'] = explode(',', $params['block']);

        } else {

          $allow_source = explode(',', $cwsd_options_prev['ipfilter']['allow']);
          $allow_append = explode(',', $params['allow']);

          $block_source = explode(',', $cwsd_options_prev['ipfilter']['block']);
          $block_append = explode(',', $params['block']);

          foreach($allow_append as $index => $value) {
            if(filter_var($value, FILTER_VALIDATE_IP) && !in_array($value, $allow_source)) {
              $allow_source[] = $value;
            }
          }

          foreach($block_append as $index => $value) {
            if(filter_var($value, FILTER_VALIDATE_IP) && !in_array($value, $block_source)) {
              $block_source[] = $value;
            }
          }

        }

        if(isset($params['unallow'])) {
          $unallow = explode(',', $params['unallow']);
          $allow_source = array_diff($allow_source, $unallow);
        }

        if(isset($params['unblock'])) {
          $unblock = explode(',', $params['unblock']);
          $block_source = array_diff($block_source, $unblock);
        }

        $cwsd_options_prev['ipfilter']['allow'] = implode(',', $allow_source);
        $cwsd_options_prev['ipfilter']['block'] = implode(',', $block_source);

        $cwis_defender_settings->update(json_decode(json_encode($cwsd_options_prev), true));
        return $cwsd_options_prev;

      } else {

        if(isset($params['antibot']) && ((isset($cwsd_options_prev['antibot']) && $params['antibot'] != $cwsd_options_prev['antibot']) || !isset($cwsd_options_prev['antibot']) )) {
          $cwsd_options_prev['antibot'] = $params['antibot'];
        }

        if(isset($params['antispam']) && ((isset($cwsd_options_prev['antispam']) && $params['antispam'] != $cwsd_options_prev['antispam']) || !isset($cwsd_options_prev['antispam']) ))  {
          $cwsd_options_prev['antispam'] = $params['antispam'];
        }

        if(isset($params['bruteforce']) && ((isset($cwsd_options_prev['bruteforce']) && $params['bruteforce'] != $cwsd_options_prev['bruteforce'])  || !isset($cwsd_options_prev['bruteforce']) ))  {
          $cwsd_options_prev['bruteforce'] = $params['bruteforce'];
        }

        if(isset($params['smartwaf']) && ((isset($cwsd_options_prev['smartwaf']) && $params['smartwaf'] != $cwsd_options_prev['smartwaf']) || !isset($cwsd_options_prev['smartwaf']) ))  {

          /*
          $cwsd_options_prev['smartwaf'] = $params['smartwaf'];

          if($cwsd_options_prev['smartwaf']) {
            \activate_cwsd();
          } else {
            \uninstall_cwsd();
          }
          */

        }

        $cwis_defender_settings->update(json_decode(json_encode($cwsd_options_prev), true));
        return $cwsd_options_prev;

      }

    }
}
