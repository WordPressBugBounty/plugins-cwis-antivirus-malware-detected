<?php

namespace App\Actions;

use App\Library\CwisLogger;
use App\State;
use App\Adapters\WpAdapter;
use App\Library\CwisStaticHelpers;
use App\Library\CwisApi;
use App\Library\CwisTOTP;

class Register extends BaseAction
{
    public function __invoke()
    {
        $adapter = new WpAdapter();
        $system  = $adapter->getSystemComponents();
        $totp_key = State::cnf('CWIS_TOTP_KEY');

        if (!$totp_key) {
            $totp_key = CwisTOTP::gen_totp_key();
            State::setCnf('CWIS_TOTP_KEY', $totp_key);
        }

        $url = CwisStaticHelpers::get_server_host();
        if (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {
            $url = 'https://' . $url;
        } else {
            $url = 'http://' . $url;
        }

        $ip = get_ip_address() ? get_ip_address() : '127.0.0.1';

        $data = [
            //'sys' => $system,
            'url' => $url,
            'name' => $adapter->getOption('blogname'),
            'restapi' => State::cnf('CWIS_REST_NONCE'),
            'email' => $adapter->getOption('admin_email'),
            //'licence' => '',
            'totp_key' => $totp_key,
            'totp_ts'  => time(),

            'loc_ip' => $ip,
        ];

        $server_key = $adapter->getOption('CWIS_SERVER_KEY');

        if ($server_key) {
            $data['server_key'] = $server_key;
        }

        $res = json_decode(CwisApi::register($data), true);

        return ['req' => $data, 'res' => $res ];
    }
}
