<?php

namespace App\Actions;

use App\Library\Cwis_Defender_Filesystem;
use App\Library\Cwis_Defender_Guarder;
use App\Library\Cwis_Defender_Admin;
use App\Library\Cwis_Defender_Settings;
use App\Library\Cwis_Updater_Methods;
use App\Library\CwisLoader;
use App\Library\CwisRuntime;
use App\Library\CwisApi;
use App\State;

class Defender extends BaseAction
{

    public function __invoke($params): array {

      $result = [];
      if(!isset($params['cwis_task'])) {
        return [];
      }

      $task = $params['cwis_task'];
      unset($params['cwis_task']);

      switch ($task) {

          // Get/update WAF settings
          case 'settings':

              $cwis_defender_settings = new Cwis_Defender_Settings();
              $cwis_defender_admin = new Cwis_Defender_Admin();
              $cwsd_options_prev = $cwis_defender_settings->all();
              $sent = isset($params['cwis_config']) ? json_decode(stripslashes($params['cwis_config']), true) : false;
              
              if($sent) {

                $runtime = new CwisRuntime();

                if(isset($sent['antibot'])) {

                  if($sent['antibot']) {
                    if(!$cwsd_options_prev['antibot']) {
                        //$cwis_defender_admin->reinstall_guarder_protection();
                        $cwis_defender_guarder = CwisLoader::get_class_instance(Cwis_Defender_Guarder::class);
                        $cwis_defender_guarder->manage_traps(true);
                    }
                  } else {
                    $cwis_defender_guarder = CwisLoader::get_class_instance(Cwis_Defender_Guarder::class);
                    $cwis_defender_guarder->manage_traps(false);
                  }

                }

                if(isset($sent['smartwaf'])) {

                  $result = $cwis_defender_settings->update($sent);
                  CwisApi::sync_settings($sent);

                  if($sent['smartwaf']) {
                    if(!$cwsd_options_prev['smartwaf']) {
                      $runtime->setMode(1);
                    }
                  } else {
                    $runtime->setMode(0);
                  }
                }
              } else {
                $result = $cwsd_options_prev;
              }

          break;

          // Output WAF stats
          case 'stats':
              $cwis_defender_guarder = CwisLoader::get_class_instance(Cwis_Defender_Guarder::class);
              $result = $cwis_defender_guarder->get_defender_pageview_stats();
          break;

          // Output Updater data
          case 'updater':
              $cwis_updater_methods = CwisLoader::get_class_instance(Cwis_Updater_Methods::class);
              $result = $cwis_updater_methods->get_cached_updater_data();
          break;
      }

      return $result;

    }
}
