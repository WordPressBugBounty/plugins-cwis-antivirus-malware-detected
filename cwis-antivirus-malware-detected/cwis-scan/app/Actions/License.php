<?php

namespace App\Actions;

use App\Library\Cwis_Defender_Filesystem;
use App\Library\CwisLoader;
use App\Library\CwisApi;
use App\Library\CwisLicensing;
use App\Library\CwisUtilities;
use App\Library\CwisStaticHelpers;
use App\State;

class License extends BaseAction
{

    private function convertXmlToArray($data = '')
    {
        $results = $matches = array();
        preg_match_all('/<(.*?)>([^<]+)<\/\\1>/i', $data, $matches);
        foreach ($matches[1] AS $k => $v) {
            $results[$v] = $matches[2][$k];
        }

        return $results;
    }

    public function __invoke($params)
    {
        $result = [];

        $params['domain']  = CwisStaticHelpers::get_server_host();
        $params['ip']      = get_server_ip();
        $params['dir']     = State::scanPath();

        $op = $params['cwis_task'];

        $licensing = new CwisLicensing();
        $utilities = new CwisUtilities();

        switch ($op) {
            case 'auth':
                // Get path to the license file
                $utilities = new CwisUtilities();
                if (State::cnf('CWIS_PLATFORM_TYPE') == 'cpanel') {
                    $utilities->setScanPath($this->config->getScanPath());
                }
                $license_filepath = $utilities->defineFilePath('license');

                // Check a license key and/or local key
                $result = $licensing->getAuthCheckResults($license_filepath);

                $result['restNonce'] = State::cnf('CWIS_REST_NONCE');
            break;

            case 'register':
                $result = CwisApi::license_register($params);
                if ($result) {
                    $result = json_decode($result, true);
                    if (isset($result['success']) &&
                        $result['success'] &&
                        isset($result['data']) &&
                        !in_array($result['data'], ["<status>Invalid</status>"])
                    ) {
                        $licensing->dataRequestRegister($result['data']);
                        $result = $licensing->getResults();

                        if (isset($result['localkey'])) {
                            $fn = $utilities->defineFilePath('license');
                            file_put_contents_safe($fn, $result['localkey']);
                        }
                    }
                }
            break;
            case 'verify':
                unset($params['subaction'], $params['cwis_task'], $params['action']);
                $result = CwisApi::license_verify($params);

                if ($result) {
                    $result = json_decode($result, true);

                    if (isset($result['success']) &&
                        $result['success'] &&
                        isset($result['data']) &&
                        !in_array($result['data'], ["<status>Invalid</status>"])
                    ) {
                        $licensing->dataRequestVerify($result['data'], $params['lkey']);
                        $result = $licensing->getResults();

                        if (isset($result['localkey'])) {
                            $fn = $utilities->defineFilePath('license');
                            file_put_contents_safe($fn, $result['localkey']);
                        }
                    }
                }
            break;
        }
        return $result;
    }
}
